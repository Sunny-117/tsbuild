"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[886],{9613:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(9496);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,f=u["".concat(s,".").concat(d)]||u[d]||h[d]||o;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(8957),i=(t(9496),t(9613));const o={sidebar_position:10},a="watch \u6a21\u5f0f",c={unversionedId:"basic/watch",id:"basic/watch",title:"watch \u6a21\u5f0f",description:"\u5728mainTask\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636eoptions\u6765\u5224\u65ad\u662f\u5426\u6dfb\u52a0watcher\uff0c\u6b64\u5904\u4f7f\u7528chokidar\u5b9e\u73b0\u76d1\u542c\u6a21\u5f0f\u3002",source:"@site/docs/basic/watch.md",sourceDirName:"basic",slug:"/basic/watch",permalink:"/tsbuild/docs/basic/watch",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"\u652f\u6301 ES5",permalink:"/tsbuild/docs/basic/es5"},next:{title:"\u538b\u7f29\u4ee3\u7801",permalink:"/tsbuild/docs/basic/minify"}},s={},p=[],l={toc:p},u="wrapper";function h(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"watch-\u6a21\u5f0f"},"watch \u6a21\u5f0f"),(0,i.kt)("p",null,"\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"mainTask"),"\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e",(0,i.kt)("inlineCode",{parentName:"p"},"options"),"\u6765\u5224\u65ad\u662f\u5426\u6dfb\u52a0",(0,i.kt)("inlineCode",{parentName:"p"},"watcher"),"\uff0c\u6b64\u5904\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"chokidar"),"\u5b9e\u73b0\u76d1\u542c\u6a21\u5f0f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const startWatcher = async () => {\n  if (!options.watch) return\n\n  const { watch } = await import('chokidar')\n\n  const customIgnores = options.ignoreWatch\n    ? Array.isArray(options.ignoreWatch)\n      ? options.ignoreWatch\n      : [options.ignoreWatch]\n    : []\n\n  const ignored = [\n    '**/{.git,node_modules}/**',\n    options.outDir,\n    ...customIgnores,\n  ]\n\n  const watchPaths =\n    typeof options.watch === 'boolean'\n      ? '.'\n      : Array.isArray(options.watch)\n      ? options.watch.filter((path): path is string => typeof path === 'string')\n      : options.watch\n\n  const watcher = watch(watchPaths, {\n    ignoreInitial: true,\n    ignorePermissionErrors: true,\n    ignored,\n  })\n  watcher.on('all', async (type, file) => {\n    file = slash(file)\n\n    if (options.publicDir && isInPublicDir(options.publicDir, file)) {\n      logger.info('CLI', `Change in public dir: ${file}`)\n      copyPublicDir(options.publicDir, options.outDir)\n      return\n    }\n\n    // By default we only rebuild when imported files change\n    // If you specify custom `watch`, a string or multiple strings\n    // We rebuild when those files change\n    let shouldSkipChange = false\n\n    if (options.watch === true) {\n      if (file === 'package.json' && !buildDependencies.has(file)) {\n        const currentHash = await getAllDepsHash(process.cwd())\n        shouldSkipChange = currentHash === depsHash\n        depsHash = currentHash\n      } else if (!buildDependencies.has(file)) {\n        shouldSkipChange = true\n      }\n    }\n\n    if (shouldSkipChange) {\n      return\n    }\n\n    debouncedBuildAll()\n  })\n}\n")))}h.isMDXComponent=!0}}]);